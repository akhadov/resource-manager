@page "/document/{DocumentId:guid}"
@using ResourceManager.Application.Documents.GetDocument
@using ResourceManager.Domain.Documents
@using ResourceManager.UI.Services.Interfaces
@inject IDocumentService _documentService
@inject NavigationManager _navigationManager

<MudContainer MaxWidth="MaxWidth.Medium" Class="mx-auto my-4">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="GoBack">
        Go Back
    </MudButton>
    
    <MudPaper Class="pa-4" Elevation="4">
        @if (isLoading)
        {
            <MudText Typo="Typo.h6" Align="Align.Center">
                <MudProgressCircular Indeterminate Color="Color.Primary" Class="mr-2" /> Loading document...
            </MudText>
        }
        else if (document == null)
        {
            <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Error">
                <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" Color="Color.Error" Class="mr-2" /> Document not found.
            </MudText>
        }
        else
        {
            <MudGrid>
                <MudItem xs="12" sm="4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Primary">Document Title:</MudText>
                </MudItem>
                <MudItem xs="12" sm="8">
                    <MudText Typo="Typo.body1">@document.Title</MudText>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Primary">Content:</MudText>
                </MudItem>
                <MudItem xs="12" sm="8">
                    <MudText Typo="Typo.body1" Class="mb-3">@document.Content</MudText>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Primary">Status:</MudText>
                </MudItem>
                <MudItem xs="12" sm="8">
                    <MudText Typo="Typo.body1" Class="mb-3">@document.Status</MudText>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Primary">Created At:</MudText>
                </MudItem>
                <MudItem xs="12" sm="8">
                    <MudText Typo="Typo.body1">@document.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</MudText>
                </MudItem>

                <MudItem xs="12" sm="4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Primary">Updated At:</MudText>
                </MudItem>
                <MudItem xs="12" sm="8">
                    <MudText Typo="Typo.body1">@document.UpdatedAt?.ToString("yyyy-MM-dd HH:mm:ss")</MudText>
                </MudItem>
            </MudGrid>

            <MudDivider Class="my-4" />

            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Edit">
                Edit Document
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" Class="ml-2">
                Delete Document
            </MudButton>
        }
    </MudPaper>
</MudContainer>

@code {
    [Parameter] public Guid DocumentId { get; set; }
    private DocumentResponse? document;
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        isLoading = true;
        try
        {
            document = await _documentService.GetDocument(DocumentId);

            if (document == null)
            {
                Console.WriteLine($"Document with ID {DocumentId} not found.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading document: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoBack()
    {
        _navigationManager.NavigateTo("/documents");
    }
}
