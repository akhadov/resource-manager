@using ResourceManager.Application.Workflows.GetById
@using ResourceManager.UI.Services.Interfaces
@inject IDocumentService _documentService


<MudDialogContent Class="dialog-content">
    <MudTable Items="_workflows" Dense="true" Striped="true" Hover="true" Class="modern-table">
        <HeaderContent>
            <MudTh>Approver Level</MudTh>
            <MudTh>Result</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.ApproverLevel</MudTd>
            <MudTd>
                @if (!context.IsChecked)
                {
                    <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.Schedule" />
                }
                else if (context.IsApproved)
                {
                    <MudIcon Color="Color.Success" Icon="@Icons.Material.Filled.CheckCircle" />
                }
                else
                {
                    <MudIcon Color="Color.Error" Icon="@Icons.Material.Filled.Cancel" />
                }
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudDialogContent>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Guid DocumentId { get; set; }

    private IEnumerable<WorkflowResponse> _workflows = new List<WorkflowResponse>();

    protected override async Task OnInitializedAsync()
    {
        await GetWorkflows();
    }

    private async Task GetWorkflows()
    {
        _workflows = await _documentService.GetWorkflows(DocumentId);
    }

    private void CloseDialog() => MudDialog.Close();
}
